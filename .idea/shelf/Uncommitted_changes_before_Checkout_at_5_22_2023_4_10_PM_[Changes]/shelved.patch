Index: src/main/java/model/PowerUp.java
===================================================================
diff --git a/src/main/java/model/PowerUp.java b/src/main/java/model/PowerUp.java
--- a/src/main/java/model/PowerUp.java	
+++ b/src/main/java/model/PowerUp.java	
@@ -1,7 +1,27 @@
 package model;
 
+import config.ImageAddresses;
+import view.LevelManager;
+
 import java.awt.*;
+import java.awt.image.BufferedImage;
+
+public class PowerUp {
+
+    LevelManager levelManager;
+    BufferedImage powerUpImage;
+
+    int x;
+    int y;
+    public int powerUpDiameter = 40;
+    boolean isEaten = false;
+    public boolean[] drawingPowerUpsAtSectionOne = new boolean[20];
+    public boolean[] drawingPowerUpsAtSectionTwo = new boolean[20];
 
-public class PowerUp extends Rectangle {
+
+    public PowerUp(LevelManager levelManager) {
+        powerUpImage = ImageAddresses.getPlayerSprite(ImageAddresses.COIN);
+        this.levelManager = levelManager;
+    }
 
 }
Index: src/main/java/view/TileManager.java
===================================================================
diff --git a/src/main/java/view/TileManager.java b/src/main/java/view/TileManager.java
--- a/src/main/java/view/TileManager.java	
+++ b/src/main/java/view/TileManager.java	
@@ -2,7 +2,7 @@
 
 import config.ImageAddresses;
 import model.Tile;
-import view.GamePanel;
+
 
 import java.awt.*;
 
Index: src/main/java/model/Game.java
===================================================================
diff --git a/src/main/java/model/Game.java b/src/main/java/model/Game.java
--- a/src/main/java/model/Game.java	
+++ b/src/main/java/model/Game.java	
@@ -1,5 +1,6 @@
 package model;
 
+import audio.AudioPlayer;
 import com.fasterxml.jackson.annotation.JsonIncludeProperties;
 import view.*;
 
@@ -13,23 +14,6 @@
 @JsonIncludeProperties(value = {"player", "levelManager", "time"})
 public class Game implements Runnable {
 
-    Timer timer;
-    private GameFrame gameFrame;
-    private GamePanel gamePanel;
-    private Thread gameThread;
-    private Player player;
-    private LevelManager levelManager;
-    public TileManager tileManager;
-
-    public Pipe pipe;
-    public Coin coin;
-    public Plant plant;
-
-    public GraphicalPipe graphicalPipe;
-    public GraphicalCoin graphicalCoin;
-    public GraphicalPlant graphicalPlant;
-
-
     /* TODO: moving to config */
     public final static float SCALE = 1.5f;
     public final static int TILES_DEFAULT_SIZE = 32;
@@ -42,14 +26,30 @@
     public static boolean isInSectionTwo = false;
     private final int FPS = 120;
     private final int UPS = 200;
+    public TileManager tileManager;
+    public Pipe pipe;
+    public Coin coin;
+    public Plant plant;
+    public GraphicalPipe graphicalPipe;
+    public GraphicalCoin graphicalCoin;
+    public GraphicalPlant graphicalPlant;
     public int coins = 0;
     public int lives = 3;
     public int score = 0;
     public boolean isGameEnded;
     public boolean isCalculatedScoreInSectionOne;
     public boolean isCalculatedScoreInSectionTwo;
+    Timer timer;
     ArrayList<JFrame> frames;
     int time = 100;
+    boolean running = true;
+    private GameFrame gameFrame;
+    private GamePanel gamePanel;
+    private Thread gameThread;
+    private Player player;
+    private LevelManager levelManager;
+
+    private AudioPlayer audioPlayer;
 
     public Game() {
         // this should be the first thing in constructor
@@ -78,6 +78,8 @@
         player = new Player(40, 300, 50, 80);
         time = 100;
 
+//        audioPlayer = new AudioPlayer();
+
         if (isInSectionOne)
             levelManager = new LevelManager(this, 1);
 
@@ -100,6 +102,13 @@
             tileManager = new TileManager(gamePanel);
     }
 
+    public void setGameState(GameState state) {
+        switch (state) {
+            case MENU -> this.getAudioPlayer().playSong(AudioPlayer.MENU);
+            case PLAYING -> this.getAudioPlayer().setLevelSong(1);
+        }
+    }
+
     public void update() {
         // Death
         // in section one
@@ -339,6 +348,7 @@
         double deltaFrame = 0;
 
 
+//        while (true) {
         while (true) {
             long currentTime = System.nanoTime();
 
@@ -347,7 +357,6 @@
 
             previousTime = currentTime;
 
-
             if (deltaUpdate >= 1) {
                 update();
                 updates++;
@@ -371,6 +380,8 @@
                 updates = 0;
             }
         }
+//        }
+
     }
 
     public Player getPlayer() {
@@ -532,6 +543,22 @@
         isCalculatedScoreInSectionTwo = calculatedScoreInSectionTwo;
     }
 
+    public boolean isRunning() {
+        return running;
+    }
+
+    public void setRunning(boolean running) {
+        this.running = running;
+    }
+
+    public AudioPlayer getAudioPlayer() {
+        return audioPlayer;
+    }
+
+    public void setAudioPlayer(AudioPlayer audioPlayer) {
+        this.audioPlayer = audioPlayer;
+    }
+
     public static boolean isIsInSectionOne() {
         return isInSectionOne;
     }
Index: src/main/java/config/ImageAddresses.java
===================================================================
diff --git a/src/main/java/config/ImageAddresses.java b/src/main/java/config/ImageAddresses.java
--- a/src/main/java/config/ImageAddresses.java	
+++ b/src/main/java/config/ImageAddresses.java	
@@ -11,7 +11,6 @@
 
 //    static final String ICON_GAME = "src/MarioPhotos/images.png";
 
-
     public static final String COIN = "spr_coin_0.png";
     public static final String PIPE = "pipe.png";
     public static final String FLOWER = "flower.png";
@@ -32,7 +31,6 @@
     public static final String STORE_YELLOW = "StoreYellow.png";
     public static final String STORE_PINK = "StorePink.png";
 
-
     public static BufferedImage getPlayerSprite(String fileName) {
         File imageFile = new File("D:\\Coding Tutorial\\spam tamrin code\\SuperSuperSuperSuperMariooo\\src\\" + fileName);
         BufferedImage image = null;
@@ -42,7 +40,7 @@
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
-
+        return image;
 //        BufferedImage image = null;
         //InputStream inputStream = config.ImageAddresses.class.getResourceAsStream("/" + fileName);
 //        try {
@@ -58,9 +56,5 @@
 //                e.printStackTrace();
 //            }
 //        }
-
-        return image;
     }
-
-
 }
\ No newline at end of file
Index: src/main/java/controller/KeyController.java
===================================================================
diff --git a/src/main/java/controller/KeyController.java b/src/main/java/controller/KeyController.java
--- a/src/main/java/controller/KeyController.java	
+++ b/src/main/java/controller/KeyController.java	
@@ -37,6 +37,8 @@
                 break;
             case KeyEvent.VK_P:
                 System.out.println("pause");
+                gamePanel.getGame().setRunning(!gamePanel.getGame().isRunning());
+                System.out.println(gamePanel.getGame().isRunning());
                 break;
             case KeyEvent.VK_ESCAPE:
                 System.out.println("escape");
